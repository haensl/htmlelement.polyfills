# https://circleci.com/docs/2.1/language-javascript/
version: 2.1
commands:
  extract-changelog-version:
    steps:
      - run:
          name: extract changelog version
          working_directory: ~/htmlelement.polyfills
          command: |
            VERSION=$(head -n1 CHANGELOG.md | grep -o '\([0-9]\+\.\)\{2\}[0-9]\+')
            echo "export VERSION=${VERSION}" >> $BASH_ENV
            echo "export CHANGELOG_VERSION=${VERSION}" >> $BASH_ENV
            echo "changelog version: ${VERSION}"

  extract-package-json-version:
    steps:
      - run:
          name: extract package.json version
          working_directory: ~/htmlelement.polyfills
          command: |
            PACKAGE_JSON_VERSION=$(node -e "console.info(require('./package').version)")
            echo "export PACKAGE_JSON_VERSION=${PACKAGE_JSON_VERSION}" >> $BASH_ENV
            echo "package.json version: ${PACKAGE_JSON_VERSION}"

  extract-published-version:
    steps:
      - run:
          name: extract latest published version
          working_directory: ~/htmlelement.polyfills
          command: |
            LIVE_VERSION=$(npm show htmlelement.polyfills version || true)
            [ -z "${LIVE_VERSION}" ] && LIVE_VERSION='0.0.0'
            echo "export LIVE_VERSION=${LIVE_VERSION}" >> ${BASH_ENV}
            echo "latest published version: ${LIVE_VERSION}"

  extract-versions:
    steps:
      - extract-changelog-version
      - extract-package-json-version
      - extract-published-version

  init:
    steps:
      - run:
          name: update npm
          command: sudo npm install -g npm@latest

  prepare-repo:
    steps:
      - checkout
      - restore_cache:
          keys: htmlelement.polyfills-dependencies-{{ checksum "package.json" }}
      - run:
          name: install dependencies
          command: npm i
      - save_cache:
          paths:
            - node_modules
          key: htmlelement.polyfills-dependencies-{{ checksum "package.json" }}
      - extract-versions

  create-test-project:
    parameters:
      project_name:
        description: project name
        type: string
        default: test-app
    steps:
      - run:
          working-directory: /tmp
          name: create test application
          command: |
            mkdir << parameters.project_name >>
            cd << parameters.project_name >> && npm init -y

  bundle-test-setup:
    steps:
      - attach_workspace:
          at: ~/htmlelement.polyfills
      - create-test-project
      - run:
          name: install module
          working-directory: /tmp/test-app
          command: |
            npm i -S ~/htmlelement.polyfills

  package-information:
    steps:
      - run:
          name: install tree
          command: sudo apt-get -y install tree
      - run:
          name: gather bundle information
          command: |
            npm info htmlelement.polyfills@${VERSION} > ./bundle.info
            tree -s node_modules/htmlelement.polyfills >> ./bundle.info
      - store_artifacts:
          path: bundle.info

workflows:
  version: 2
  default:
    when: always
    jobs:
      - lint
      - test
      - bundle:
          requires:
            - lint
            - test
      - bundle-test-esm-js:
          requires:
            - bundle
      - bundle-test-cjs-js:
          requires:
            - bundle
      - ensure-versioned-correctly:
          requires:
            - bundle
      - publish:
          requires:
            - ensure-versioned-correctly
            - bundle-test-esm-js
          filters:
            branches:
              only: master
      - package-test-esm-js:
          requires:
            - publish
      - package-test-cjs-js:
          requires:
            - publish
      - publish-github-release:
          requires:
            - package-test-esm-js
            - package-test-cjs-js

jobs:
  lint:
    docker:
      - image: circleci/node:lts
    working_directory: ~/htmlelement.polyfills
    steps:
      - init
      - prepare-repo
      - run:
          name: create test-results-folder
          command: mkdir -p test-results/eslint
      - run:
          name: lint
          command: npm run lint:ci
      - store_test_results:
          path: test-results

  test:
    docker:
      - image: circleci/node:lts
    working_directory: ~/htmlelement.polyfills
    steps:
      - init
      - prepare-repo
      - run:
          name: unit tests
          command: npm run test:ci
      - store_test_results:
          path: test-results

  bundle:
    docker:
      - image: circleci/node:lts
    working_directory: ~/htmlelement.polyfills
    steps:
      - init
      - prepare-repo
      - extract-versions
      - run:
          name: generate production bundle
          command: npm run build
      - store_artifacts:
          path: dist
      - run:
          name: pack
          environment:
            NODE_ENV: 'production'
          command: |
            npm pack
            mv htmlelement.polyfills-${VERSION}.tgz htmlelement.polyfills.tgz
      - store_artifacts:
          path: htmlelement.polyfills.tgz
      - persist_to_workspace:
          root: ./
          paths:
            - CHANGELOG.md
            - src
            - lib
            - README.md
            - LICENSE
            - package.json
            - package-lock.json
            - .npmignore
            - htmlelement.polyfills.tgz

  bundle-test-cjs-js:
    docker:
      - image: circleci/node:lts
    steps:
      - init
      - attach_workspace:
          at: ~/htmlelement.polyfills
      - extract-versions
      - create-test-project
      - run:
          name: install module
          working_directory: /tmp/test-app
          command: |
            npm i -S ~/htmlelement.polyfills/htmlelement.polyfills.tgz
      - run:
          name: test cjs.js module
          working_directory: /tmp/test-app
          command: |
            node -e "const polyfills = require('htmlelement.polyfills'); const assert = require('assert'); assert.deepEqual(typeof polyfills, 'function');"

  bundle-test-esm-js:
    docker:
      - image: circleci/node:lts
    steps:
      - init
      - attach_workspace:
          at: ~/htmlelement.polyfills
      - extract-versions
      - run:
          name: create a test react app
          working_directory: /tmp
          command: |
            npx create-react-app --use-npm esm-test
      - run:
          name: install module
          working_directory: /tmp/esm-test
          command: |
            npm i -S ~/htmlelement.polyfills/htmlelement.polyfills.tgz
      - run:
          name: create ESM test
          working_directory: /tmp/esm-test
          command: |
            echo "import HTMLElementPolyfills from 'htmlelement.polyfills'; describe('htmlelement.polyfills', () => { it('exports a function', () => { expect(typeof HTMLElementPolyfills).toEqual('function')})})" > src/polyfills.test.js
      - run:
          name: test esm.js module
          working_directory: /tmp/esm-test
          command: |
            npm test

  ensure-versioned-correctly:
    docker:
      - image: circleci/node:lts
    working_directory: ~/htmlelement.polyfills
    steps:
      - init
      - attach_workspace:
          at: ~/htmlelement.polyfills
      - extract-versions
      - run:
          name: changelog matches package.json
          command: |
            test ${PACKAGE_JSON_VERSION} = ${CHANGELOG_VERSION}
      - run:
          name: pacakge.json greater than live
          command: |
            node \<<VERSION_CHECK
            const pkgVersion = require('./package').version
              .split('.')
              .map((i) => parseInt(i, 10));
            const liveVersion = process.env.LIVE_VERSION
              .split('.')
              .map((i) => parseInt(i, 10));
            const isGreater = pkgVersion.reduce((isGreater, part, i) => {
              return isGreater || (part > liveVersion[i]);
            }, false);
            if (!isGreater) {
              process.exit(1);
            }
            VERSION_CHECK

  publish:
    docker:
      - image: circleci/node:lts
    working_directory: ~/htmlelement.polyfills
    steps:
      - init
      - attach_workspace:
          at: ~/htmlelement.polyfills
      - run:
          name: setup npm registry token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: publish node module
          command: npm publish --access public

  package-test-esm-js:
    docker:
      - image: circleci/node:lts
    steps:
      - init
      - run:
          name: create a test react app
          working_directory: /tmp
          command: |
            npx create-react-app --use-npm esm-test
      - run:
          name: install module
          working_directory: /tmp/esm-test
          command: |
            npm i -S htmlelement.polyfills
      - run:
          name: create ESM test
          working_directory: /tmp/esm-test
          command: |
            echo "import HTMLElementPolyfills from 'htmlelement.polyfills'; describe('htmlelement.polyfills', () => { it('exports a function', () => { expect(typeof HTMLElementPolyfills).toEqual('function')})})" > src/polyfills.test.js
      - run:
          name: test esm.js module
          working_directory: /tmp/esm-test
          command: |
            npm test
      - package-information

  package-test-cjs-js:
    docker:
      - image: circleci/node:lts
    steps:
      - init
      - create-test-project
      - run:
          name: install module
          working_directory: /tmp/test-app
          command: |
            npm i -S htmlelement.polyfills
      - run:
          name: test cjs.js module
          working_directory: /tmp/test-app
          command: |
            node -e "const polyfills = require('htmlelement.polyfills'); const assert = require('assert'); assert.deepEqual(typeof polyfills, 'function');"

  publish-github-release:
    docker:
      - image: cibuilds/github
    steps:
      - attach_workspace:
          at: ~/htmlelement.polyfills
      - extract-changelog-version
      - run:
          name: publish github release
          working_directory: ~/htmlelement.polyfills
          command: |
            cp ./htmlelement.polyfills.tgz ./htmlelement.polyfills-${VERSION}.tgz
            CHANGES=$(awk "/## ${VERSION}/,/^$/" CHANGELOG.md)
            echo "Publishing release v${VERSION} to Github.\nChanges:"
            echo $CHANGES
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete -n "v${VERSION}" -b "${CHANGES}" "v${VERSION}" ./htmlelement.polyfills-${VERSION}.tgz
